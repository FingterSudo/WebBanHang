@using Web_BanHang.Models;
@using Web_BanHang.DTO;
@using Newtonsoft.Json;
 


@*@model Web_BanHang.Models.DonHang*@
@model  Web_BanHang.Models.Sach 
@{

    ViewBag.Title = "ThemMoiFinal";
    Layout = "~/Views/Layout/AdminLayout.cshtml";
}



@*<script src="~/Content/jquerystep/jquerysteps/jquery-1.9.1.min.js"></script>*@
`
<script src="~/Content/jquery-3.1.1.js"></script>
<link href="~/Content/stepui.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.1.1.js"
        integrity="sha256-16cdPddA6VdVInumRGo6IbivbERE8p7CQR3HzTBuELA="
        crossorigin="anonymous"></script>
<link href="~/Content/stepui.css" rel="stylesheet" />
 
    <div class="container  ">
            <div class="container-fluid">
                <br /><br />
                <ul class="list-unstyled multi-steps">
                    <li class=" step1 is-active ">Nhập họ tên</li>
                    <li class="step1 ">Nhập sản phẩm</li>
                    <li class="step1 ">Chi Tiết Hóa Đơn</li>
                    <li class="step1 ">Hoàn Thành</li>
                </ul>
            </div>

            @using (Html.BeginForm("ThemMoiFinal", "QuanLyDonHang", FormMethod.Post, new { name = "regForm" }))
            {



                <h1>Thêm mới đơn hàng </h1>
                <div class="progress-track"></div>
                //Tab 1 thong tin khach hang
                //ToDo: dien thong tin khach hang
                <div class="tab form-group ">
                    <div class="namealert">
                        <label>Họ tên *</label>
                        <p><input placeholder="Họ tên..." oninput="this.className = 'form-control form-control'" name="name" id="name" autocomplete="off"></p>
                    </div>
                    <div class="phonealert">
                        <label>Điện thoại *</label>
                        <p><input placeholder="Điện thoại " oninput="this.className = 'form-control form-control'" name="phone" id="phone" autocomplete="off" /></p>
                    </div>
                    <div class="adressalert">
                        <label>Địa chỉ *</label>
                        <p><input placeholder="Địa chỉ" oninput="this.className='form-control form-control'" id="adress"  name="adress" autocomplete="off" /></p>
                    </div>
                    <div class="emailalert">
                        <label>Email *</label>
                        <p><input placeholder="Email" oninput="this.className = 'form-control form-control'" id="email" name="email" autocomplete="off" /></p>
                    </div>
                </div>
                // Tab 2: Thong tin san pham
                //form hoa don tim kiem duoc
                // sau khi tim kiem thi them sp vao don hang
                // don hang co the chinh sua duoc so luong, va xoa duoc
                <div class="tab form-group ">                           
                    <input type="text" id="searchBook"/>
                    <table class="table-active  table table-striped">
                        <thead>
                            <tr class="Search">
                                <th>Mã sản phẩm</th>
                                <th>Tên sản phẩm</th>
                                <th>Đơn giá</th>
                                <th>Số lượng tồn</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="DataSearching">     
                                @*<tr class="Search">
                                    <td> </td>
                                    <td> </td>
                                    <td> </td>
                                    <td> </td>
                                    <td><input type="checkbox" name="checkBox" value="False"/></td>
                                </tr>*@

                        </tbody>
                    </table>                    
                    <div class="productButton">
                        <button class="Button badge-dark" id="productAdd" type="button">Thêm sản phẩm</button>
                    </div>
                    <div class="text-center">
                        <label><button type="button" class=" btn btn-danger">Chit tiết đơn hàng</button></label>
                        <div class="OrderDetail">
                            <table class="table-order table table-striped">
                                <thead>
                                    <tr>
                                        <th>Mã sản phẩm</th>
                                        <th>Tên sản phẩm</th>
                                        <th>Đơn giá</th>
                                        <th> Số lượng</th>
                                        <th>Tổng tiền</th>
                                    </tr>
                                </thead>
                                <tbody class="addOrderDetail" >      
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td>Tổng tiền</td>
                                        <td onclick="ChangevalInput()"></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                  </div>
                    // tab  Chi tiet hoa don 
                <div class="tab form-group">
                    Thông tin hóa đơn
                   <label><button class="btn btn-dark" id="ViewOders" type="button">Click Button</button></label>
                    <div class="viewOder">
                        <input name="CustomerName" />
                        <input name="CustomerAdr" />
                        <input name="CustomerEmail" />
                        <input name="CustomerPhone" />
                    </div>
                    <div class=" BillDetail">
                        <table class="table table-striped">
                            <tr>
                                <td>Mã Hóa Đơn:</td>
                                <td> </td>
                                <td>Tên Khách Hàng:</td>
                                <td></td>
                                <td>Ngày sinh:</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>Địa chỉ:</td>
                                <td></td>
                                <td>Giới tính</td>
                                <td></td>
                                <td>Sđt:</td>
                                <td></td>
                                <td>Email:</td>
                                <td></td>
                            </tr>
                        </table>
                        <label><button type="button" class=" btn btn-danger">Chit tiết đơn hàng</button></label>
                        <table class="table">
                            <tr>
                                <td>Mã sách</td>
                                <td>Tên sách</td>
                                <td>Số lượng</td>
                                <td>Đơn giá</td>
                                <td>Tổng giá</td>
                            </tr>
                            <tr>
                                <td>1</td>
                                <td>2</td>
                                <td>3</td>
                                <td>4</td>
                                <td>5</td>
                            </tr>
                            <tr>
                                <td></td>
                                <td></td>
                                <td>Tổng tiền: </td>
                                <td></td>
                                <td>6</td>
                            </tr>
                        </table>
                    </div>
                </div>

                    <div class="tab form-group">
                        Login Info:
                        <p><input placeholder="Username..." oninput="this.className = 'form-control form-control'"></p>
                        <p><input placeholder="Password..." oninput="this.className = 'form-control form-control'"></p>
                    </div>

                    <div style="overflow:auto;">
                        <div style="float:right;">
                            <button type="button" id="prevBtn" onclick="nextPrev(-1)" class="btn btn-danger">Previous</button>
                            <button type="button" id="nextBtn" onclick="nextPrev(1)" class="btn btn-danger">Next</button>
                        </div>
                    </div>

                    <div style="text-align:center;margin-top:40px;">
                        <span class="step"></span>
                        <span class="step"></span>
                        <span class="step"></span>
                        <span class="step"></span>
                    </div>
                }

                </div>

    @section scripts{
        <script>
        var currentTab = 0; // Tab hiện tại được đặt là tab đầu tiên [0]
        showTab(currentTab); // Hiển thị tab hiện tại

        function showTab(n) {
            // This function will display the specified tab of the form ...
            // Function này sẽ hiển thị tab được chỉ định của biểu mẫu
            var x = document.getElementsByClassName("tab");
            x[n].style.display = "block";
            // và sửa chữa Previous/ Next buttons:
            // ... and fix the Previous/Next buttons:
            if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
            } else {
                document.getElementById("prevBtn").style.display = "inline";
            }

            if (n == (x.length - 1)) {
                document.getElementById("nextBtn").innerHTML = "Submit";
            } else {
                document.getElementById("nextBtn").innerHTML = "Next";
            }

            // và chạy một function chỉ báo hiển thị bước tiếp theo
            // ... and run a function that displays the correct step indicator:
            fixStepIndicator(n)
        }

        function nextPrev(n) {
            // hàn này chỉ ra tab nào sẽ hiển thị
            // This function will figure out which tab to display
            var x = document.getElementsByClassName("tab");
            // thoát function nếu bất kỳ trường nào trong tab không hợp lệ
            // Exit the function if any field in the current tab is invalid:
            if (n == 1 && !validateForm()) return false;
            // Ẩn tab hiện tại
            // Hide the current tab:
            x[currentTab].style.display = "none";
            // tăng hoặc giảm tab hiện tại thêm 1
            // Increase or decrease the current tab by 1:
            currentTab = currentTab + n;
            // nếu bạn đã đạt tới form cuối
            // if you have reached the end of the form... :
            if (currentTab >= x.length) {
                //...the form gets submitted:
                // mẫu được submit
                document.getElementById("regForm").submit();
                return false;
            }
            // Otherwise, display the correct tab:
            // nếu không hiển thị tab chính xác
            showTab(currentTab);

           // prevStep();
        }

        function validateForm() {
            // funtion này liên quan tới validate
            // This function deals with validation of the form fields
            var x, y, i, valid = true;
            x = document.getElementsByClassName("tab");
            y = x[currentTab].getElementsByTagName("input");
            // A loop that checks every input field in the current tab:
            // Một vòng lặp kiểm tra tất các input trong tab hiện tại
            var numbers = /^[0-9]+$/;
            var mailcheck = /^\w+([\.-]?\w+)*@("@")\w+([\.-]?\w+)*(\.\w{2,3})+$/;
            var nameval = document.getElementById('name').value;
            var phoneval = document.getElementById('phone').value;
            var adressval = document.getElementById('adress').value;
            var emailval = document.getElementById('email').value;

            var namecheckbutton = "<div class= 'alert alert-warning alert-dismissible fade show'+ role='alert'>" + " <button type='button' class='close' data-dismiss='alert' aria-label='Close'>"
                + "<span aria-hidden='true' >&times; </span ></button><strong>vui lòng điều họ tên</strong> </div > ";
            var namecheckbuttonlg = "<div class= 'alert alert-warning alert-dismissible fade show'+ role='alert'>" + " <button type='button' class='close' data-dismiss='alert' aria-label='Close'>"
                + "<span aria-hidden='true' >&times; </span ></button><strong>Nhập tên 200 ký tự </strong> </div > ";
            var phonecheckbutton = "<div class= 'alert alert-warning alert-dismissible fade show'+ role='alert'>" + " <button type='button' class='close' data-dismiss='alert' aria-label='Close'>"
                + "<span aria-hidden='true' >&times; </span ></button><strong>Vui lòng điền số điện thoại</strong> </div > ";
            var phonecheckbuttonlg = "<div class= 'alert alert-warning alert-dismissible fade show'+ role='alert'>" + " <button type='button' class='close' data-dismiss='alert' aria-label='Close'>"
                + "<span aria-hidden='true' >&times; </span ></button><strong>Định dạng số điện thoại không đúng</strong> </div > ";
            var phonecheckbuttonnum = "<div class= 'alert alert-warning alert-dismissible fade show'+ role='alert'>" + " <button type='button' class='close' data-dismiss='alert' aria-label='Close'>"
                + "<span aria-hidden='true' >&times; </span ></button><strong>vui lòng nhập số</strong> </div > ";
            var addresscheckbutton = "<div class= 'alert alert-warning alert-dismissible fade show'+ role='alert'>" + " <button type='button' class='close' data-dismiss='alert' aria-label='Close'>"
                + "<span aria-hidden='true' >&times; </span ></button><strong>Vui lòng điền địa chỉ</strong> </div > ";
            var addresscheckbuttonlg = "<div class= 'alert alert-warning alert-dismissible fade show'+ role='alert'>" + " <button type='button' class='close' data-dismiss='alert' aria-label='Close'>"
                + "<span aria-hidden='true' >&times; </span ></button><strong>Nhập từ 16-200 ký tự</strong> </div > ";
            var emailcheckbutton = "<div class= 'alert alert-warning alert-dismissible fade show'+ role='alert'>" + " <button type='button' class='close' data-dismiss='alert' aria-label='Close'>"
                + "<span aria-hidden='true' >&times; </span ></button><strong>Vui lòng nhập email</strong> </div > ";
            var emailcheckbuttoncheck = "<div class= 'alert alert-warning alert-dismissible fade show'+ role='alert'>" + " <button type='button' class='close' data-dismiss='alert' aria-label='Close'>"
                + "<span aria-hidden='true' >&times; </span ></button><strong>Nhập đúng định dạng email</strong> </div > ";
            var productcheckbutton = "<div class= 'alert alert-warning alert-dismissible fade show'+ role='alert'>" + " <button type='button' class='close' data-dismiss='alert' aria-label='Close'>"
                + "<span aria-hidden='true' >&times; </span ></button><strong>Vui lòng nhập tên sản phẩm</strong> </div > ";

            for (i = 0; i < y.length; i++) {
                // If a field is empty...r
                // nếu nó trống

                if (y[i].value == "") {
                      //add an "invalid" class to the field:
                    // thêm một lớp không hợp lệ vào trường

                    y[i].className += "invalid";

                     //and set the current valid status to false:
                     //và set trạng thái hợp lệ thành false
                    valid = false;
                }
            }
                   // start button alert
            if ( nameval == "") {
                $(".namealert").append(namecheckbutton);
            }
            // gioi han chu tu 16 ky tu tro len
            if (nameval.length > 200 && nameval.length < 16) {
                $(".namealert").append(namecheckbuttonlg);
                valid = false;
            }

            if (  phoneval=="") {
                $(".phonealert").append(phonecheckbutton);

            }
          // chinh 1 mess hien thi tung truong hop
            if (phoneval.length > 10) {
                $(".phonealert").append(phonecheckbuttonlg);
                if (phoneval.match(numbers)) {

                }
                else {
                    $(".phonealert").append(phonecheckbuttonnum);
                }
                valid = false;
            }

            if ( adressval=="") {
                $(".adressalert").append(addresscheckbutton);

            }
            if (adressval.length > 200) {
                $(".adressalert").append(addresscheckbuttonlg);
            }
            if (emailval == "") {
                $(".emailalert").append(emailcheckbutton);
            }

            if (mailcheck.test(emailval) || emailval == "") {
            }
            else {
                $(".emailalert").append(emailcheckbuttoncheck);
                valid = false;
            }

           // hiển thị  class alert độ mờ 1000, độ bền 500, slideUp độ bền 500
            // sau khi heiern thị xong thfi hủy class alert để tránh lặp lại thông báo
            // bat su kien onblur remove alert button khi khach go vao thi mat nut
            // giu lai message
            $(".alert").fadeTo(1000, 1000).slideUp(500, function () {
                $(".alert").slideUp(500);
                $(".alert").remove();

            })
                    //  end
            // If the valid status is true, mark the step as finished and valid:
            // Nếu valid status true đánh dấu kết thúc và hợp lệ

            if (valid) {
                    document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid; // return the valid status
            // return  valid status
        }

        function fixStepIndicator(n) {
            // This function removes the "active" class of all steps...
            // the function hủy tất các các hoạt động của các bước
            var i, x = document.getElementsByClassName("step");
            var y = document.getElementsByClassName("step1")
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
                y[i].className = y[i].className.replace("is-active", "");
            }
            //... and adds the "active" class to the current step:
            // và thêm hoạt động lớp và bước hiện tại
            x[n].className += " active";
            y[n].className += "is-active";
        }
        // check number
        //function nextStep() {
        //    var avticeStep = $('.is-active');

        //    avticeStep.next().addClass('is-active');
        //    avticeStep.removeClass();
        //}
        //function prevStep() {
        //    var activeStep = $('.is-active');
        //    activeStep.prev().removeClass('is-active');
        //    activeStep.addClass();
        //}
        // auto Complete
        $("#productName").autocomplete({
            source:
                function (request, response) {
                    $.ajax({
                        url: '/QuanLyDonHang/GetBookValue?search=' + $("#productName").val(),
                        dataType: "json",
                        data: { search: $("#productName").val() },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.TenSach, value: item.TenSach };
                            }))
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        }
                    })
                }
        })
        $("input[ name='productPrice']").on('blur', function () {
            const priceValue = $(this).val;
            if (!!priceValue) {
                $.ajax({
                    url: '/QuanLyDonHang/GetPrice?search=' + priceValue,
                    method: 'GET',
                    success: function (getPrice) {
                        $(".productPrice").val(getPrice);
                    },
                    error: function (err) {
                        console.log(err);
                    }
                })
            }
            })
            // autocomplete search book
            //$(document).ready(function () {
            //    $("searchBtn").click(function () {
            //        var searchValue = $("Search").val();
            //        var setData = $("#DataSearching");
            //        setData.html("");
            //        $.ajax({
            //            type: "post",
            //            url: "/TimKiemAdmin/GetSearching?searchBookValue=" + searchValue,
            //            contentType: "html",
            //            success: function (result) {
            //                if (result.length == 0) {
            //                    setData.append('<tr style="color:red"><td colspan="3">No Match Data</td></tr>');
            //                }
            //                else {
            //                    $.each(result, function (index, value) {
            //                        var Data = "<tr>" +
            //                            "<td>" + value.MaSach+ "</td>" +
            //                            "<td>" + value.TenSach + "</td>" +
            //                            "<td>" + value.SoLuongTon + "</td>" +
            //                            "<td>" + value.GiaBan + "</td>" +
            //                            "<td> <td><input type='checkbox' name='checkBox'/></td>" +
            //                            "</tr>";
            //                        setData.append(Data);
            //                    })
            //                }
            //            }
            //        })
            //    })
            //})
            $("#searchBook").autocomplete({
                source:
                    function (request, respone) {
                        var setData = $("#DataSearching");
                        setData.html("");
                        $.ajax({
                            url: '/QuanLyDonHang/GetBookValue?search=' + $("#searchBook").val(),
                            method: 'GET',
                            dataType: 'json',
                            success: function (data) {
                                respone($.map(data, function (item) {
                                    var Data = "<tr>" +
                                        "<td>" + item.MaSach + "</td>" +
                                        "<td><a href='javascript:void(0)' onclick='addProduct(" + item.MaSach + ",\"" + item.TenSach + "\"," + item.GiaBan+")'>" + item.TenSach + "</a></td>" +
                                        "<td>" +  item.GiaBan  + "</td>" +
                                        "<td>" + item.SoLuongTon + "</td>" +
                                        "<td><input type='checkbox' name='checkBox'/></td>" +                                    
                                        "</tr>"; 
                                     return setData.append(Data);
                                }))         
                            },
                            error: function (xhr, staus, error) {
                                alert("không tìm thấy ");
                            }
                        })
                }
            })
            function addProduct(BookId, BookName, BookPrice) {
               
                    var BookTable =
                        "<tr>" +
                        "<td>" + BookId + "</td>" +
                        "<td>" + BookName + "</td>" +
                        "<td>" + BookPrice + "</td>" +
                        "<td>" + "<input type='number' value=1 style='width: 90px; height:40px 'class='valInput form-control' name='inputVal123' onchange='ChangevalInput(this)' />" + "</td>" +
                        "<td class='priceTotal'>" + BookPrice + "</td>" +
                        "</tr>";

                    // thêm dòng tr vào table
                    $(".addOrderDetail").append(BookTable);
               
            }
            $("#productAdd").on('click', function () {
                
                $(".table-active tbody tr ").each(function () {
                    // von
                    var BookId = $(this).find("td").eq(0).text();
                    var BookName = $(this).find("td").eq(1).text();
                    var BookPrice = $(this).find("td").eq(2).text();             
                    var BookTable  =
                        "<tr>" +
                        "<td>" + BookId + "</td>" +
                        "<td>" + BookName + "</td>" +
                        "<td>" + BookPrice + "</td>" +
                        "<td>" + "<input type='number' value=1 style='width: 90px; height:40px 'class='valInput form-control' name='inputVal123' onchange='ChangevalInput(this)' />" + "</td>" +
                        "<td class='priceTotal'>" + BookPrice + "</td>" +
                        "</tr>";
                   
                     // thêm dòng tr vào table
                    $(".addOrderDetail").append(BookTable);
                })
            })
            //$("input[name='inputVal123']").on("change", function () {
            //    const curVal = $(this).val();
            //    console.log(curVal);
            //    if (curVal <= 0 || isNaN(curVal)) {
            //        $(this).val(1)
            //    };
            //});
          
            function ChangevalInput(that) {
                var valInPut = $(that).val();
                if (valInPut <= 0 || isNaN(valInPut)) {
                    $(that).val(1)
                };

                var parentElem = $(that).parents("tr");
                var price = parseInt(parentElem.find("td").eq(2).text());
                var totalPrice = price * valInPut;
                if (totalPrice < 0 || totalPrice == 0) {
                    totalPrice = price;
                   
                }
                parentElem.find("td").eq(4).html(totalPrice);
                //var totalPrice2 + = totalPrice ;
                //parentElem.find("td").eq(2).html(totalPrice2);
                //$(".table-order tbody tr").each(function () {
                //    var valInPut = $(that).val();
                //    var BookPrice = $(this).find("td").eq(4).html();
                //    console.log(BookPrice);
                //}) 
            }  
            // lay gia tri vao hoa don:
            // check className neu className isVaild thi bat su kien on click cua nut next de 
            // get val tu cac o input cuar tab khac in ra hoa don
            // ok
            $("#ViewOders").on('click', function() {
                var CustomerName = $("input[name='name']").val();
                var CustomerAdr = $("input[name='adress']").val();
                var CustomerPhone = $("input[name='phone']").val();
                var CustomerEmail = $("input[name='email'").val();
                console.log(CustomerName);
                console.log(CustomerAdr);
                console.log(CustomerPhone);
                console.log(CustomerEmail);
                $("input[name='CustomerName']").val(CustomerName);
                $("input[name='CustomerAdr']").val(CustomerAdr);
                $("input[name='CustomerPhone']").val(CustomerPhone);
                $("input[name='CustomerEmail']").val(CustomerEmail);
            })
         
        </script>
    }
